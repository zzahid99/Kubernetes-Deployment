{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';export var ContactFilter=function ContactFilter(){var contactContext=useContext(ContactContext);var text=useRef('');var filterContacts=contactContext.filterContacts,clearFilter=contactContext.clearFilter,filtered=contactContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value!==''){filterContacts(e.target.value);}else{clearFilter();}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts...\",onChange:onChange}));};","map":{"version":3,"sources":["/home/zamar99/contact-keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","text","filterContacts","clearFilter","filtered","current","value","onChange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACG,cAAD,CAAjC,CACA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAAC,EAAD,CAAnB,CAFiC,GAIzBM,CAAAA,cAJyB,CAIiBF,cAJjB,CAIzBE,cAJyB,CAITC,WAJS,CAIiBH,cAJjB,CAITG,WAJS,CAIIC,QAJJ,CAIiBJ,cAJjB,CAIII,QAJJ,CAMjCP,SAAS,CAAC,UAAM,CACd,GAAIO,QAAQ,GAAK,IAAjB,CAAuB,CACrBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACD,CACF,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtB,GAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC7BJ,cAAc,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd,CACD,CAFD,IAEO,CACLH,WAAW,GACZ,CACF,CAND,CAQA,mBACE,6CACE,6BAAO,GAAG,CAAEF,IAAZ,CAAkB,IAAI,CAAC,MAAvB,CAA8B,WAAW,CAAC,oBAA1C,CAA+D,QAAQ,CAAEM,QAAzE,EADF,CADF,CAKD,CAzBM","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nexport const ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const text = useRef('');\n\n  const { filterContacts, clearFilter, filtered } = contactContext;\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = (e) => {\n    if (text.current.value !== '') {\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <form>\n      <input ref={text} type=\"text\" placeholder=\"Filter Contacts...\" onChange={onChange} />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}