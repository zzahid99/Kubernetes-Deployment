{"ast":null,"code":"var _jsxFileName = \"/home/zamar99/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layout/Spinner';\nimport { ContactItem } from './ContactItem';\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, contacts !== null && !loading ? /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/home/zamar99/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","TransitionGroup","CSSTransition","ContactContext","Spinner","ContactItem","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMC,cAAc,GAAGR,UAAU,CAACI,cAAD,CAAjC;AAEA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA+CJ,cAArD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAAzC,IAA8C,CAACD,OAAnD,EAA4D;AAC1D,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,gBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADH,GAMGN,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACX,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAPN,CADD,gBAeC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF;AAqBD,CAnCM","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layout/Spinner';\nimport { ContactItem } from './ContactItem';\n\nexport const Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered, getContacts, loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))\n            : contacts.map((contact) => (\n                <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}