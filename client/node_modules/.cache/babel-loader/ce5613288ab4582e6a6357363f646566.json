{"ast":null,"code":"var _jsxFileName = \"/home/zamar99/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  let url = 'http://' + process.env.REACT_APP_baseAPIURL; // Load User\n\n  const loadUser = async () => {\n    // @todo - load token into global headers\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(url + '/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    //debugger\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n\n    try {\n      //console.log(process.env)\n      //debugger\n      const res = await axios.post(url + '/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(url + '/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      clearErrors,\n      loadUser,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/zamar99/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","user","loading","error","state","dispatch","url","process","env","REACT_APP_baseAPIURL","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,IAAI,EAAE,IAHa;AAInBC,IAAAA,OAAO,EAAE,IAJU;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACG,WAAD,EAAcY,YAAd,CAApC;AACA,MAAIU,GAAG,GAAE,YAAUC,OAAO,CAACC,GAAR,CAAYC,oBAA/B,CAV2B,CAY3B;;AACA,QAAMC,QAAQ,GAAG,YAAY;AAC3B;AACAzB,IAAAA,YAAY,CAACa,YAAY,CAACD,KAAd,CAAZ;;AAEA,QAAI;AACF,YAAMc,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,GAAN,CAAUN,GAAG,GAAG,WAAhB,CAAlB;AAEAD,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEzB,WAAR;AAAqB0B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAlC,OAAD,CAAR;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAExB;AAAR,OAAD,CAAR;AACD;AACF,GAXD,CAb2B,CA0B3B;;;AACA,QAAM4B,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+B;AAFxB;AADI,KAAf;;AAOA,QAAI;AACF;AAEA;AAEA,YAAMT,GAAG,GAAG,MAAM7B,KAAK,CAACuC,IAAN,CAAWf,GAAG,GAAC,YAAf,EAA6BY,QAA7B,EAAuCC,MAAvC,CAAlB;AAEAd,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE3B,gBAAR;AAA0B4B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAvC,OAAD,CAAR;AACAL,MAAAA,QAAQ;AACT,KATD,CASE,OAAOM,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE1B,aAAR;AAAuB2B,QAAAA,OAAO,EAAEE,GAAG,CAACM,QAAJ,CAAaP,IAAb,CAAkBQ;AAAlD,OAAD,CAAR;AACD;AACF,GArBD,CA3B2B,CAkD3B;;;AACA,QAAMC,KAAK,GAAG,MAAON,QAAP,IAAoB;AAChC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMT,GAAG,GAAG,MAAM7B,KAAK,CAACuC,IAAN,CAAWf,GAAG,GAAG,WAAjB,EAA8BY,QAA9B,EAAwCC,MAAxC,CAAlB;AAEAd,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEvB,aAAR;AAAuBwB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAApC,OAAD,CAAR;AACAL,MAAAA,QAAQ;AACT,KALD,CAKE,OAAOM,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEtB,UAAR;AAAoBuB,QAAAA,OAAO,EAAEE,GAAG,CAACM,QAAJ,CAAaP,IAAb,CAAkBQ;AAA/C,OAAD,CAAR;AACD;AACF,GAfD,CAnD2B,CAoE3B;;;AACA,QAAME,MAAM,GAAG,MAAMpB,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAErB;AAAR,GAAD,CAA7B,CArE2B,CAuE3B;;;AACA,QAAMkC,WAAW,GAAG,MAAMrB,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEpB;AAAR,GAAD,CAAlC;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLE,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHV;AAILD,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAJP;AAKLE,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAMLc,MAAAA,QANK;AAOLS,MAAAA,WAPK;AAQLhB,MAAAA,QARK;AASLc,MAAAA,KATK;AAULC,MAAAA;AAVK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcG9B,KAAK,CAACgC,QAdT,CADF;AAkBD,CA5FD;;AA8FA,eAAejC,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  let url ='http://'+process.env.REACT_APP_baseAPIURL\n\n  // Load User\n  const loadUser = async () => {\n    // @todo - load token into global headers\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(url + '/api/auth');\n\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Register User\n  const register = async (formData) => {\n    //debugger\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n    };\n\n    try {\n      //console.log(process.env)\n      \n      //debugger\n\n      const res = await axios.post(url+'/api/users', formData, config);\n\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (err) {\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\n    }\n  };\n\n  // Login User\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post(url + '/api/auth', formData, config);\n\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (err) {\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\n    }\n  };\n\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        clearErrors,\n        loadUser,\n        login,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}