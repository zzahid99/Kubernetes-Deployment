{"ast":null,"code":"import _defineProperty from\"/home/zamar99/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/zamar99/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/zamar99/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';export var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact,current=contactContext.current;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'personal'});}},[contactContext,current]);var _useState=useState({name:'',email:'',phone:'',type:'personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);console.log(contact);}clearAll();};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},current?'Edit Contact':'Add Contact'),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/React.createElement(\"h5\",null,\"Contact Type\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:onChange}),\"Personal\",' ',/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type==='professional',onChange:onChange}),\"Professional\",/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:current?'Update Contact':'Add Contact',className:\"btn btn-primary btn-block\"})),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"Clear\")));};","map":{"version":3,"sources":["/home/zamar99/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","clearCurrent","updateContact","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","console","log","clearAll"],"mappings":"+cAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,GAAMC,CAAAA,cAAc,CAAGJ,UAAU,CAACE,cAAD,CAAjC,CAD+B,GAGvBG,CAAAA,UAHuB,CAG8BD,cAH9B,CAGvBC,UAHuB,CAGXC,YAHW,CAG8BF,cAH9B,CAGXE,YAHW,CAGGC,aAHH,CAG8BH,cAH9B,CAGGG,aAHH,CAGkBC,OAHlB,CAG8BJ,cAH9B,CAGkBI,OAHlB,CAK/BP,SAAS,CAAC,UAAM,CACd,GAAIO,OAAO,GAAK,IAAhB,CAAsB,CACpBC,UAAU,CAACD,OAAD,CAAV,CACD,CAFD,IAEO,CACLC,UAAU,CAAC,CACTC,IAAI,CAAE,EADG,CAETC,KAAK,CAAE,EAFE,CAGTC,KAAK,CAAE,EAHE,CAITC,IAAI,CAAE,UAJG,CAAD,CAAV,CAMD,CACF,CAXQ,CAWN,CAACT,cAAD,CAAiBI,OAAjB,CAXM,CAAT,CAL+B,cAkBDT,QAAQ,CAAC,CACrCW,IAAI,CAAE,EAD+B,CAErCC,KAAK,CAAE,EAF8B,CAGrCC,KAAK,CAAE,EAH8B,CAIrCC,IAAI,CAAE,UAJ+B,CAAD,CAlBP,wCAkBxBC,OAlBwB,eAkBfL,UAlBe,kBAyBvBC,CAAAA,IAzBuB,CAyBMI,OAzBN,CAyBvBJ,IAzBuB,CAyBjBC,KAzBiB,CAyBMG,OAzBN,CAyBjBH,KAzBiB,CAyBVC,KAzBU,CAyBME,OAzBN,CAyBVF,KAzBU,CAyBHC,IAzBG,CAyBMC,OAzBN,CAyBHD,IAzBG,CA2B/B,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,QAAOP,CAAAA,UAAU,gCAAMK,OAAN,wBAAgBE,CAAC,CAACC,MAAF,CAASP,IAAzB,CAAgCM,CAAC,CAACC,MAAF,CAASC,KAAzC,GAAjB,EAAjB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,CAAD,CAAO,CACtBA,CAAC,CAACI,cAAF,GACA,GAAIZ,OAAO,GAAK,IAAhB,CAAsB,CACpBH,UAAU,CAACS,OAAD,CAAV,CACD,CAFD,IAEO,CACLP,aAAa,CAACO,OAAD,CAAb,CACAO,OAAO,CAACC,GAAR,CAAYR,OAAZ,EACD,CACDS,QAAQ,GACT,CATD,CAWA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBjB,YAAY,GACb,CAFD,CAIA,mBACE,4BAAM,QAAQ,CAAEa,QAAhB,eACE,0BAAI,SAAS,CAAC,cAAd,EAA8BX,OAAO,CAAG,cAAH,CAAoB,aAAzD,CADF,cAEE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,MAA/B,CAAsC,IAAI,CAAC,MAA3C,CAAkD,KAAK,CAAEE,IAAzD,CAA+D,QAAQ,CAAEK,QAAzE,EAFF,cAGE,6BAAO,IAAI,CAAC,OAAZ,CAAoB,WAAW,CAAC,OAAhC,CAAwC,IAAI,CAAC,OAA7C,CAAqD,KAAK,CAAEJ,KAA5D,CAAmE,QAAQ,CAAEI,QAA7E,EAHF,cAIE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,OAA/B,CAAuC,IAAI,CAAC,OAA5C,CAAoD,KAAK,CAAEH,KAA3D,CAAkE,QAAQ,CAAEG,QAA5E,EAJF,cAKE,6CALF,cAME,6BACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,UAHR,CAIE,OAAO,CAAEF,IAAI,GAAK,UAJpB,CAKE,QAAQ,CAAEE,QALZ,EANF,YAaW,GAbX,cAcE,6BACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,cAHR,CAIE,OAAO,CAAEF,IAAI,GAAK,cAJpB,CAKE,QAAQ,CAAEE,QALZ,EAdF,6BAsBE,4CACE,6BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEP,OAAO,CAAG,gBAAH,CAAsB,aAFtC,CAGE,SAAS,CAAC,2BAHZ,EADF,CAtBF,CA6BGA,OAAO,eACN,4CACE,8BAAQ,SAAS,CAAC,yBAAlB,CAA4C,OAAO,CAAEe,QAArD,UADF,CA9BJ,CADF,CAuCD,CAnFM","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nexport const ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, clearCurrent, updateContact, current } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [contactContext, current]);\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = (e) => setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n      console.log(contact);\n    }\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\n      <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={onChange} />\n      <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={onChange} />\n      <input type=\"text\" placeholder=\"Phone\" name=\"phone\" value={phone} onChange={onChange} />\n      <h5>Contact Type</h5>\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"personal\"\n        checked={type === 'personal'}\n        onChange={onChange}\n      />\n      Personal{' '}\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"professional\"\n        checked={type === 'professional'}\n        onChange={onChange}\n      />\n      Professional\n      <div>\n        <input\n          type=\"submit\"\n          value={current ? 'Update Contact' : 'Add Contact'}\n          className=\"btn btn-primary btn-block\"\n        />\n      </div>\n      {current && (\n        <div>\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}